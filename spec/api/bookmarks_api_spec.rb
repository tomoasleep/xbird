# frozen_string_literal: true

# #Twitter API v2
#
# Twitter API v2 available endpoints
#
# The version of the OpenAPI document: 2.62
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.5.0
#

require "spec_helper"
require "json"

# Unit tests for Xbird::BookmarksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "BookmarksApi" do
  before do
    # run before each test
    @api_instance = Xbird::BookmarksApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of BookmarksApi" do
    it "should create an instance of BookmarksApi" do
      expect(@api_instance).to be_instance_of(Xbird::BookmarksApi)
    end
  end

  # unit tests for get_users_id_bookmarks
  # Bookmarks by User
  # Returns Tweet objects that have been bookmarked by the requesting User
  # @param id The ID of the authenticated source User for whom to return results.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_results The maximum number of results.
  # @option opts [String] :pagination_token This parameter is used to get the next &#39;page&#39; of results.
  # @option opts [Array<String>] :tweet_fields A comma separated list of Tweet fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :media_fields A comma separated list of Media fields to display.
  # @option opts [Array<String>] :poll_fields A comma separated list of Poll fields to display.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :place_fields A comma separated list of Place fields to display.
  # @return [Get2UsersIdBookmarksResponse]
  describe "get_users_id_bookmarks test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_id_bookmarks
  # Add Tweet to Bookmarks
  # Adds a Tweet (ID in the body) to the requesting User&#39;s (in the path) bookmarks
  # @param id The ID of the authenticated source User for whom to add bookmarks.
  # @param bookmark_add_request
  # @param [Hash] opts the optional parameters
  # @return [BookmarkMutationResponse]
  describe "post_users_id_bookmarks test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_bookmarks_delete
  # Remove a bookmarked Tweet
  # Removes a Tweet from the requesting User&#39;s bookmarked Tweets.
  # @param id The ID of the authenticated source User whose bookmark is to be removed.
  # @param tweet_id The ID of the Tweet that the source User is removing from bookmarks.
  # @param [Hash] opts the optional parameters
  # @return [BookmarkMutationResponse]
  describe "users_id_bookmarks_delete test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
end
