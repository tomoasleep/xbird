# frozen_string_literal: true

# #Twitter API v2
#
# Twitter API v2 available endpoints
#
# The version of the OpenAPI document: 2.62
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.5.0
#

require "spec_helper"
require "json"

# Unit tests for Xbird::ListsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "ListsApi" do
  before do
    # run before each test
    @api_instance = Xbird::ListsApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of ListsApi" do
    it "should create an instance of ListsApi" do
      expect(@api_instance).to be_instance_of(Xbird::ListsApi)
    end
  end

  # unit tests for get_user_list_memberships
  # Get a User&#39;s List Memberships
  # Get a User&#39;s List Memberships.
  # @param id The ID of the User to lookup.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_results The maximum number of results.
  # @option opts [String] :pagination_token This parameter is used to get a specified &#39;page&#39; of results.
  # @option opts [Array<String>] :list_fields A comma separated list of List fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @return [Get2UsersIdListMembershipsResponse]
  describe "get_user_list_memberships test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_add_member
  # Add a List member
  # Causes a User to become a member of a List.
  # @param id The ID of the List for which to add a member.
  # @param [Hash] opts the optional parameters
  # @option opts [ListAddUserRequest] :list_add_user_request
  # @return [ListMutateResponse]
  describe "list_add_member test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_id_create
  # Create List
  # Creates a new List.
  # @param [Hash] opts the optional parameters
  # @option opts [ListCreateRequest] :list_create_request
  # @return [ListCreateResponse]
  describe "list_id_create test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_id_delete
  # Delete List
  # Delete a List that you own.
  # @param id The ID of the List to delete.
  # @param [Hash] opts the optional parameters
  # @return [ListDeleteResponse]
  describe "list_id_delete test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_id_get
  # List lookup by List ID.
  # Returns a List.
  # @param id The ID of the List.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :list_fields A comma separated list of List fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @return [Get2ListsIdResponse]
  describe "list_id_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_id_update
  # Update List.
  # Update a List that you own.
  # @param id The ID of the List to modify.
  # @param [Hash] opts the optional parameters
  # @option opts [ListUpdateRequest] :list_update_request
  # @return [ListUpdateResponse]
  describe "list_id_update test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_remove_member
  # Remove a List member
  # Causes a User to be removed from the members of a List.
  # @param id The ID of the List to remove a member.
  # @param user_id The ID of User that will be removed from the List.
  # @param [Hash] opts the optional parameters
  # @return [ListMutateResponse]
  describe "list_remove_member test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_follow
  # Follow a List
  # Causes a User to follow a List.
  # @param id The ID of the authenticated source User that will follow the List.
  # @param [Hash] opts the optional parameters
  # @option opts [ListFollowedRequest] :list_followed_request
  # @return [ListFollowedResponse]
  describe "list_user_follow test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_owned_lists
  # Get a User&#39;s Owned Lists.
  # Get a User&#39;s Owned Lists.
  # @param id The ID of the User to lookup.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_results The maximum number of results.
  # @option opts [String] :pagination_token This parameter is used to get a specified &#39;page&#39; of results.
  # @option opts [Array<String>] :list_fields A comma separated list of List fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @return [Get2UsersIdOwnedListsResponse]
  describe "list_user_owned_lists test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_pin
  # Pin a List
  # Causes a User to pin a List.
  # @param id The ID of the authenticated source User that will pin the List.
  # @param list_pinned_request
  # @param [Hash] opts the optional parameters
  # @return [ListPinnedResponse]
  describe "list_user_pin test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_pinned_lists
  # Get a User&#39;s Pinned Lists
  # Get a User&#39;s Pinned Lists.
  # @param id The ID of the authenticated source User for whom to return results.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :list_fields A comma separated list of List fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @return [Get2UsersIdPinnedListsResponse]
  describe "list_user_pinned_lists test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_unfollow
  # Unfollow a List
  # Causes a User to unfollow a List.
  # @param id The ID of the authenticated source User that will unfollow the List.
  # @param list_id The ID of the List to unfollow.
  # @param [Hash] opts the optional parameters
  # @return [ListFollowedResponse]
  describe "list_user_unfollow test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_unpin
  # Unpin a List
  # Causes a User to remove a pinned List.
  # @param id The ID of the authenticated source User for whom to return results.
  # @param list_id The ID of the List to unpin.
  # @param [Hash] opts the optional parameters
  # @return [ListUnpinResponse]
  describe "list_user_unpin test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_followed_lists
  # Get User&#39;s Followed Lists
  # Returns a User&#39;s followed Lists.
  # @param id The ID of the User to lookup.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_results The maximum number of results.
  # @option opts [String] :pagination_token This parameter is used to get a specified &#39;page&#39; of results.
  # @option opts [Array<String>] :list_fields A comma separated list of List fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @return [Get2UsersIdFollowedListsResponse]
  describe "user_followed_lists test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
end
