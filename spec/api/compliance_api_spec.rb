# frozen_string_literal: true

# #Twitter API v2
#
# Twitter API v2 available endpoints
#
# The version of the OpenAPI document: 2.62
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.5.0
#

require "spec_helper"
require "json"

# Unit tests for Xbird::ComplianceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "ComplianceApi" do
  before do
    # run before each test
    @api_instance = Xbird::ComplianceApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of ComplianceApi" do
    it "should create an instance of ComplianceApi" do
      expect(@api_instance).to be_instance_of(Xbird::ComplianceApi)
    end
  end

  # unit tests for create_batch_compliance_job
  # Create compliance job
  # Creates a compliance for the given job type
  # @param create_compliance_job_request
  # @param [Hash] opts the optional parameters
  # @return [CreateComplianceJobResponse]
  describe "create_batch_compliance_job test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_batch_compliance_job
  # Get Compliance Job
  # Returns a single Compliance Job by ID
  # @param id The ID of the Compliance Job to retrieve.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :compliance_job_fields A comma separated list of ComplianceJob fields to display.
  # @return [Get2ComplianceJobsIdResponse]
  describe "get_batch_compliance_job test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tweets_compliance_stream
  # Tweets Compliance stream
  # Streams 100% of compliance data for Tweets
  # @param partition The partition number.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :backfill_minutes The number of minutes of backfill requested.
  # @option opts [Time] :start_time YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Tweet Compliance events will be provided.
  # @option opts [Time] :end_time YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweet Compliance events will be provided.
  # @return [TweetComplianceStreamResponse]
  describe "get_tweets_compliance_stream test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tweets_label_stream
  # Tweets Label stream
  # Streams 100% of labeling events applied to Tweets
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :backfill_minutes The number of minutes of backfill requested.
  # @option opts [Time] :start_time YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Tweet labels will be provided.
  # @option opts [Time] :end_time YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Tweet labels will be provided.
  # @return [TweetLabelStreamResponse]
  describe "get_tweets_label_stream test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_compliance_stream
  # Users Compliance stream
  # Streams 100% of compliance data for Users
  # @param partition The partition number.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :backfill_minutes The number of minutes of backfill requested.
  # @option opts [Time] :start_time YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the User Compliance events will be provided.
  # @option opts [Time] :end_time YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the User Compliance events will be provided.
  # @return [UserComplianceStreamResponse]
  describe "get_users_compliance_stream test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_batch_compliance_jobs
  # List Compliance Jobs
  # Returns recent Compliance Jobs for a given job type and optional job status
  # @param type Type of Compliance Job to list.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Status of Compliance Job to list.
  # @option opts [Array<String>] :compliance_job_fields A comma separated list of ComplianceJob fields to display.
  # @return [Get2ComplianceJobsResponse]
  describe "list_batch_compliance_jobs test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
end
