# frozen_string_literal: true

# #Twitter API v2
#
# Twitter API v2 available endpoints
#
# The version of the OpenAPI document: 2.62
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.5.0
#

require "spec_helper"
require "json"

# Unit tests for Xbird::SpacesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "SpacesApi" do
  before do
    # run before each test
    @api_instance = Xbird::SpacesApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of SpacesApi" do
    it "should create an instance of SpacesApi" do
      expect(@api_instance).to be_instance_of(Xbird::SpacesApi)
    end
  end

  # unit tests for find_space_by_id
  # Space lookup by Space ID
  # Returns a variety of information about the Space specified by the requested ID
  # @param id The ID of the Space to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :space_fields A comma separated list of Space fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :topic_fields A comma separated list of Topic fields to display.
  # @return [Get2SpacesIdResponse]
  describe "find_space_by_id test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_spaces_by_creator_ids
  # Space lookup by their creators
  # Returns a variety of information about the Spaces created by the provided User IDs
  # @param user_ids The IDs of Users to search through.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :space_fields A comma separated list of Space fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :topic_fields A comma separated list of Topic fields to display.
  # @return [Get2SpacesByCreatorIdsResponse]
  describe "find_spaces_by_creator_ids test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_spaces_by_ids
  # Space lookup up Space IDs
  # Returns a variety of information about the Spaces specified by the requested IDs
  # @param ids The list of Space IDs to return.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :space_fields A comma separated list of Space fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :topic_fields A comma separated list of Topic fields to display.
  # @return [Get2SpacesResponse]
  describe "find_spaces_by_ids test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_spaces
  # Search for Spaces
  # Returns Spaces that match the provided query.
  # @param query The search query.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state The state of Spaces to search for.
  # @option opts [Integer] :max_results The number of results to return.
  # @option opts [Array<String>] :space_fields A comma separated list of Space fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :topic_fields A comma separated list of Topic fields to display.
  # @return [Get2SpacesSearchResponse]
  describe "search_spaces test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for space_buyers
  # Retrieve the list of Users who purchased a ticket to the given space
  # Retrieves the list of Users who purchased a ticket to the given space
  # @param id The ID of the Space to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pagination_token This parameter is used to get a specified &#39;page&#39; of results.
  # @option opts [Integer] :max_results The maximum number of results.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :tweet_fields A comma separated list of Tweet fields to display.
  # @return [Get2SpacesIdBuyersResponse]
  describe "space_buyers test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for space_tweets
  # Retrieve Tweets from a Space.
  # Retrieves Tweets shared in the specified Space.
  # @param id The ID of the Space to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_results The number of Tweets to fetch from the provided space. If not provided, the value will default to the maximum of 100.
  # @option opts [Array<String>] :tweet_fields A comma separated list of Tweet fields to display.
  # @option opts [Array<String>] :expansions A comma separated list of fields to expand.
  # @option opts [Array<String>] :media_fields A comma separated list of Media fields to display.
  # @option opts [Array<String>] :poll_fields A comma separated list of Poll fields to display.
  # @option opts [Array<String>] :user_fields A comma separated list of User fields to display.
  # @option opts [Array<String>] :place_fields A comma separated list of Place fields to display.
  # @return [Get2SpacesIdTweetsResponse]
  describe "space_tweets test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
end
